name: Build iOS Static Library

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    
    - name: Select Xcode
      run: |
        sudo xcode-select -switch /Applications/Xcode.app
        xcodebuild -version
      
    - name: Prepare build environment
      run: |
        pwd
        ls -la
        echo "Creating build directory..."
        mkdir -p build
        cd build
        echo "Current directory: $(pwd)"
        
        echo "Linking source files..."
        for file in ../*.h ../*.c; do
          if [ -f "$file" ]; then
            echo "Linking: $file"
            ln -sf "$file" .
          fi
        done
        
        echo "Build directory contents:"
        ls -la
        
    - name: Create Xcode project
      run: |
        cd build
        echo "Current directory: $(pwd)"
        chmod +x ../generate-xcodeproj.sh
        ../generate-xcodeproj.sh
        
        echo "Xcode project contents:"
        ls -la lua.xcodeproj/
        
    - name: Build static library
      run: |
        cd build
        BUILD_DIR="$(pwd)"
        echo "Current directory: $BUILD_DIR"
        set -e
        
        echo "Building for iOS devices (arm64)..."
        xcodebuild clean build \
          -project lua.xcodeproj \
          -target lua \
          -configuration Release \
          -sdk iphoneos \
          ONLY_ACTIVE_ARCH=NO \
          BUILD_DIR="$BUILD_DIR" \
          BUILD_ROOT="$BUILD_DIR" \
          SYMROOT="$BUILD_DIR" \
          OBJROOT="$BUILD_DIR" \
          CONFIGURATION_BUILD_DIR="$BUILD_DIR/Release-iphoneos" \
          ARCHS="arm64" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY="" \
          -verbose
        
        echo "iOS device build output:"
        ls -la Release-iphoneos || true
        
        echo "Building for iOS Simulator (x86_64, arm64)..."
        xcodebuild clean build \
          -project lua.xcodeproj \
          -target lua \
          -configuration Release \
          -sdk iphonesimulator \
          ONLY_ACTIVE_ARCH=NO \
          BUILD_DIR="$BUILD_DIR" \
          BUILD_ROOT="$BUILD_DIR" \
          SYMROOT="$BUILD_DIR" \
          OBJROOT="$BUILD_DIR" \
          CONFIGURATION_BUILD_DIR="$BUILD_DIR/Release-iphonesimulator" \
          ARCHS="x86_64 arm64" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY="" \
          -verbose
        
        echo "iOS simulator build output:"
        ls -la Release-iphonesimulator || true
        
        echo "Build directory contents:"
        ls -la
        find . -name "*.a" -type f
        
        echo "Creating universal binary..."
        if [ ! -f "Release-iphoneos/liblua.a" ]; then
          echo "Error: iOS device library not found"
          find . -name "liblua.a" -type f
          exit 1
        fi
        
        if [ ! -f "Release-iphonesimulator/liblua.a" ]; then
          echo "Error: iOS simulator library not found"
          find . -name "liblua.a" -type f
          exit 1
        fi
        
        lipo -create \
          Release-iphoneos/liblua.a \
          Release-iphonesimulator/liblua.a \
          -output liblua.a
        
        echo "Build completed successfully!"
        ls -la liblua.a
        file liblua.a
        lipo -info liblua.a
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-static-library
        path: build/liblua.a
        if-no-files-found: error 