name: Build iOS Static Library

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    
    - name: Select Xcode
      run: |
        sudo xcode-select -switch /Applications/Xcode.app
        xcodebuild -version
      
    - name: Prepare build environment
      run: |
        pwd
        ls -la
        echo "Creating build directory..."
        mkdir -p build
        cd build
        echo "Current directory: $(pwd)"
        
        echo "Linking source files..."
        for file in ../*.h ../*.c; do
          if [ -f "$file" ]; then
            echo "Linking: $file"
            ln -sf "$file" .
          fi
        done
        
        echo "Build directory contents:"
        ls -la
        
    - name: Create Xcode project
      run: |
        cd build
        echo "Current directory: $(pwd)"
        chmod +x ../generate-xcodeproj.sh
        ../generate-xcodeproj.sh
        
        echo "Xcode project contents:"
        ls -la lua.xcodeproj/
        
    - name: Build static library
      run: |
        cd build
        BUILD_DIR="$(pwd)"
        echo "Current directory: $BUILD_DIR"
        set -e
        
        echo "Building for iOS devices (arm64)..."
        xcodebuild clean build \
          -project lua.xcodeproj \
          -target lua \
          -configuration Release \
          -sdk iphoneos \
          ONLY_ACTIVE_ARCH=NO \
          BUILD_FOR_DISTRIBUTION=YES \
          ARCHS="arm64" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY="" \
          -verbose
        
        echo "iOS device build output:"
        ls -la Release-iphoneos || true
        ls -la build/Release-iphoneos || true
        ls -la ../Release-iphoneos || true
        find . -name "liblua.a" -type f
        
        echo "Building for iOS Simulator (x86_64, arm64)..."
        xcodebuild clean build \
          -project lua.xcodeproj \
          -target lua \
          -configuration Release \
          -sdk iphonesimulator \
          ONLY_ACTIVE_ARCH=NO \
          BUILD_FOR_DISTRIBUTION=YES \
          ARCHS="x86_64 arm64" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY="" \
          -verbose
        
        echo "iOS simulator build output:"
        ls -la Release-iphonesimulator || true
        ls -la build/Release-iphonesimulator || true
        ls -la ../Release-iphonesimulator || true
        find . -name "liblua.a" -type f
        
        echo "Build directory contents:"
        ls -la
        pwd
        find "$BUILD_DIR" -name "liblua.a" -type f
        
        DEVICE_LIB=""
        SIMULATOR_LIB=""
        
        # Find device library
        for lib in $(find . -name "liblua.a" -type f); do
          if file "$lib" | grep -q "arm64"; then
            DEVICE_LIB="$lib"
            echo "Found device library: $DEVICE_LIB"
          fi
        done
        
        # Find simulator library
        for lib in $(find . -name "liblua.a" -type f); do
          if file "$lib" | grep -q "x86_64"; then
            SIMULATOR_LIB="$lib"
            echo "Found simulator library: $SIMULATOR_LIB"
          fi
        done
        
        if [ -z "$DEVICE_LIB" ]; then
          echo "Error: iOS device library not found"
          exit 1
        fi
        
        if [ -z "$SIMULATOR_LIB" ]; then
          echo "Error: iOS simulator library not found"
          exit 1
        fi
        
        echo "Creating universal binary..."
        lipo -create \
          "$DEVICE_LIB" \
          "$SIMULATOR_LIB" \
          -output liblua.a
        
        echo "Build completed successfully!"
        ls -la liblua.a
        file liblua.a
        lipo -info liblua.a
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-static-library
        path: build/liblua.a
        if-no-files-found: error 